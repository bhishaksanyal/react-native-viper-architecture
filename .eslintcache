[{"/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/.eslintrc.js":"1","/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/App.tsx":"2","/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/__tests__/App-test.tsx":"3","/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/babel.config.js":"4","/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/coverage/lcov-report/block-navigation.js":"5","/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/coverage/lcov-report/prettify.js":"6","/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/coverage/lcov-report/sorter.js":"7","/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/index.js":"8","/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/metro.config.js":"9"},{"size":1106,"mtime":1630086810242,"results":"10","hashOfConfig":"11"},{"size":2518,"mtime":1630086810243,"results":"12","hashOfConfig":"11"},{"size":266,"mtime":1630086810244,"results":"13","hashOfConfig":"11"},{"size":77,"mtime":1630086810255,"results":"14","hashOfConfig":"11"},{"size":2387,"mtime":1630243944644,"results":"15","hashOfConfig":"11"},{"size":17590,"mtime":1630243944646,"results":"16","hashOfConfig":"11"},{"size":5278,"mtime":1630243944645,"results":"17","hashOfConfig":"11"},{"size":187,"mtime":1630236398326,"results":"18","hashOfConfig":"11"},{"size":299,"mtime":1630086826085,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1thxbe",{"filePath":"22","messages":"23","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/.eslintrc.js",[],"/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/App.tsx",["39","40","41"],"/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * Generated with the TypeScript template\n * https://github.com/react-native-community/react-native-template-typescript\n *\n * @format\n */\n\nimport React from 'react';\nimport { SafeAreaView, ScrollView, StatusBar, StyleSheet, Text, useColorScheme, View } from 'react-native';\n\nimport {\n  Colors,\n  DebugInstructions,\n  Header,\n  LearnMoreLinks,\n  ReloadInstructions,\n} from 'react-native/Libraries/NewAppScreen';\n\nconst Section: React.FC<{\n  title: string;\n}> = ({ children, title }) => {\n  const isDarkMode = useColorScheme() === 'dark';\n  return (\n    <View style={styles.sectionContainer}>\n      <Text\n        style={[\n          styles.sectionTitle,\n          {\n            color: isDarkMode ? Colors.white : Colors.black,\n          },\n        ]}\n      >\n        {title}\n      </Text>\n      <Text\n        style={[\n          styles.sectionDescription,\n          {\n            color: isDarkMode ? Colors.light : Colors.dark,\n          },\n        ]}\n      >\n        {children}\n      </Text>\n    </View>\n  );\n};\n\nconst App = () => {\n  const isDarkMode = useColorScheme() === 'dark';\n\n  const backgroundStyle = {\n    backgroundColor: isDarkMode ? Colors.darker : Colors.lighter,\n  };\n\n  return (\n    <SafeAreaView style={backgroundStyle}>\n      <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n      <ScrollView contentInsetAdjustmentBehavior=\"automatic\" style={backgroundStyle}>\n        <Header />\n        <View\n          style={{\n            backgroundColor: isDarkMode ? Colors.black : Colors.white,\n          }}\n        >\n          <Section title=\"Step One\">\n            Edit <Text style={styles.highlight}>App.tsx</Text> to change this screen and then come back to see your\n            edits.\n          </Section>\n          <Section title=\"See Your Changes\">\n            <ReloadInstructions />\n          </Section>\n          <Section title=\"Debug\">\n            <DebugInstructions />\n          </Section>\n          <Section title=\"Learn More\">Read the docs to discover what to do next:</Section>\n          <LearnMoreLinks />\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  sectionContainer: {\n    marginTop: 32,\n    paddingHorizontal: 24,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: '600',\n  },\n  sectionDescription: {\n    marginTop: 8,\n    fontSize: 18,\n    fontWeight: '400',\n  },\n  highlight: {\n    fontWeight: '700',\n  },\n});\n\nexport default App;\n","/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/__tests__/App-test.tsx",[],"/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/babel.config.js",[],"/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/coverage/lcov-report/block-navigation.js",[],"/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/coverage/lcov-report/prettify.js",[],"/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/coverage/lcov-report/sorter.js",[],"/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/index.js",[],"/Users/bhishaksanyal/Documents/GitHub/react-native-typescript-template/metro.config.js",[],{"ruleId":"42","severity":2,"message":"43","line":24,"column":9,"nodeType":"44","messageId":"45","endLine":24,"endColumn":17},{"ruleId":"42","severity":2,"message":"46","line":24,"column":19,"nodeType":"44","messageId":"45","endLine":24,"endColumn":24},{"ruleId":"47","severity":1,"message":"48","line":52,"column":13,"nodeType":"49","messageId":"50","endLine":52,"endColumn":18},"react/prop-types","'children' is missing in props validation","Property","missingPropType","'title' is missing in props validation","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType"]